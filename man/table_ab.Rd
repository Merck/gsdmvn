% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/table_ab.R
\name{table_ab}
\alias{table_ab}
\title{One-to-many table merge for presentation}
\usage{
table_ab(table_a, table_b, byvar, decimals = 1, aname = names(table_a)[1])
}
\arguments{
\item{table_a}{A data frame with one record for each value of \code{byvar}.}

\item{table_b}{A data frame with one or more records for each value of \code{byvar}.}

\item{byvar}{A mapping a one-to-many relation from \code{table_a} to \code{table_b}.}

\item{decimals}{A vector with the number of decimals to be displayed for variables in \code{table_a}.}

\item{aname}{The text label for the index \code{byvar}}
}
\value{
A data frame merging data frames \code{table_a} and \code{table_b} with the name from
\code{aname} and a character string concatenating variables from \code{table_a} (appropriately rounded).
The columns of \code{table_b} are also included. This is intended for use with gt() grouping by
rows in a.
}
\description{
A table is desired based on a one-to-many mapping.
The data frame in \code{table_a} maps into \code{table_b} with the by variable \code{by_a}
Examples show how to use with the \emph{gt} package for printing a compact combined table.
}
\examples{
library(dplyr)
library(tidyr)
library(gt)
a <- data.frame(Index = 1:2, a1 = c(1.1234, 5.9876), a2 = c("text 1", "text 2"), a3 = c(3.12, 4.98) )
b <- data.frame(Index = c(1, 2, 2),
                b1 = c("apple", "table", "penny"),
                b2 = 1:3 * (9 / 8),
                b3 = (10:8) / 3
               )
table_ab(a, b, byvar = "Index", decimals = c(0, 2, 0, 1), aname = "Index") \%>\%
  group_by(Index) \%>\% gt() \%>\% fmt_number(b3, decimals = 2) \%>\%
  tab_header(title = "Grouped data table") \%>\%
  tab_footnote("The table a variables have been concatenated into a text string, rounded appropriately.",
               cells_row_groups(groups = 1)) \%>\%
  tab_footnote("Note that footnotes cannot be made for individual variables in the row groups generated using table a.",
               cells_row_groups(groups = 2))
}
